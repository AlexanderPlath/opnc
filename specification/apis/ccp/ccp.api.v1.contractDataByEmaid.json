{
    "get": {
        "summary": "GetContractDataByEmaid",
        "operationId": "getContractDataByEmaidV1",
        "description": "Get contract data from CCP by EMAID.",
        "tags": [
            "GetContractDataByEmaid"
        ],
        "parameters": [
            {
                "$ref": "../../components/parameters/headers/opncFromPartyType.v1.json"
            },
            {
                "$ref": "../../components/parameters/headers/opncFromPartyId.v1.json"
            },
            {
                "$ref": "../../components/parameters/headers/opncToPartyType.v1.json"
            },
            {
                "$ref": "../../components/parameters/headers/opncToPartyId.v1.json"
            },
            {
                "schema": {
                    "$ref": "../../components/parameters/emaidParam.v1.json"
                },
                "name": "emaid",
                "in": "path",
                "required": true,
                "description": "Contract identifier of contract certificate"
            },
            {
                "schema": {
                    "$ref": "../../components/parameters/xsdMsgDefNamespaceParam.v1.json"
                },
                "in": "query",
                "name": "xsdMsgDefNamespace",
                "description": "to receive contract data for a specific ISO version"
            },
            {
                "schema": {
                    "$ref": "../../components/parameters/cpsV2GRootCertificateFingerprintParam.v1.json"
                },
                "in": "query",
                "description": "The SHA256 Fingerprint of the desired V2G root CA which shall was used to sign these data with the regarding CPS signing certificate. Its optional. If not given, the CPS will decide which CPS signing V2G PKI will be renurned",
                "name": "cpsV2GRootCertificateFingerprint"
            }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../components/responses/getContractDataRes.v1.json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../components/schemas/error.v1.json"
                },
                "examples": {
                  "Invalid EMAID": {
                    "value": {
                      "errorMessages": [
                        "emaid : must match \"^[A-Za-z]{2}[-]?\\w{3}[-]?\\w{9,28}[-]?(\\w{1})?$\""
                      ],
                      "traceId": "02be5c05-298b-4503-a685-8126951e0233"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
    }
}