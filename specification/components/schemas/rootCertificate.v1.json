{
    "type": "object",
    "title": "RootCertificateV1",
    "description": "Object containing a root certificate registered in the Root Certificate Pool.\n\nFields marked with _informative_ are for information purpose only. Any certificate-based validations should refer to the certificates signed values instead of relying these fields.",
    "x-examples": {},
    "minProperties": 1,
    "maxProperties": 1,
    "properties": {
      "rootCertificateId": {
        "type": "string",
        "description": "The UUID of each root certificate is generated by thy system when the root certificate gets registered. It can be used to request an individual certificate using the REST API.",
        "format": "uuid",
        "example": "896b6655-180e-4304-b642-606bb00df8f0",
        "pattern": "^[0-9a-fA-F]{8}\\-([0-9a-fA-F]{4}\\-){3}[0-9a-fA-F]{12}$"
      },
      "distinguishedName": {
        "type": "string",
        "example": "DC=V2G, CN=V2G_ROOT_CA_001, O=V2G",
        "pattern": "^((CN|OU|O|C|DC|ST)=[^,]+,? ?)+$",
        "description": "Reflects the subjects distinguished name field. (informative)"
      },
      "rootType": {
        "type": "string",
        "enum": [
          "MO",
          "V2G",
          "OEM",
          "PE"
        ]
      },
      "caCertificate": {
        "type": "string",
        "example": "MIICWTCCA",
        "pattern": "^[-A-Za-z0-9+/]+={0,3}$",
        "description": "The root certificate in DER format encoded in Base64.",
        "maxLength": 800
      },
      "commonName": {
        "type": "string",
        "description": "Reflects the subjects common name value. (informative)",
        "example": ""
      },
      "rootAuthorityKeyIdentifier": {
        "type": "string",
        "description": "SHA-1 hash of the certificates public key (informative)"
      },
      "rootIssuerSerialNumber": {
        "type": "string",
        "description": "serial number in hex format of the certificate (informative)",
        "example": ""
      },
      "validFrom": {
        "type": "string",
        "description": "Reflects the subjects not before date. (infotmative)",
        "format": "date-time",
        "example": "2017-12-07T14:08:30Z"
      },
      "validTo": {
        "type": "string",
        "description": "Reflects the subjects not after date. (infotmative)",
        "format": "date-time",
        "example": "2057-12-07T14:08:30Z"
      },
      "organizationName": {
        "type": "string",
        "description": "Reflects the subjects organization name value. (informative)",
        "example": "Hubject GmbH"
      },
      "certificateRevocationList": {
        "type": "string",
        "description": ""
      },
      "crossCertificatePair": {
        "type": "string"
      },
      "labeledUri": {
        "type": "string",
        "description": "RFC 2079 labeledURI"
      },
      "fingerprint": {
        "type": "string",
        "description": "SHA256 certificate fingerprint (informative)"
      }
    },
    "required": [
      "rootType",
      "caCertificate"
    ]
  }